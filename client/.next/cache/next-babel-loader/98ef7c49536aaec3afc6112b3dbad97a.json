{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nvar globalState = {};\nvar listeners = [];\nvar actions = {};\nexport var useStore = function useStore() {\n  _s();\n\n  var shouldListen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var setState = useState(globalState)[1];\n\n  var dispatch = function dispatch(actionIdentifier, payload) {\n    var newState = actions[actionIdentifier](globalState, payload);\n    globalState = (_readOnlyError(\"globalState\"), _objectSpread(_objectSpread({}, globalState), newState));\n\n    var _iterator = _createForOfIteratorHelper(listeners),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var listener = _step.value;\n        listener(globalState);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n\n  useEffect(function () {\n    if (shouldListen) {\n      listeners.push(setState);\n    }\n\n    return function () {\n      if (shouldListen) {\n        listeners = (_readOnlyError(\"listeners\"), listeners.filter(function (li) {\n          return li !== setState;\n        }));\n      }\n    };\n  }, [setState, shouldListen]);\n  return [globalState, dispatch];\n};\n\n_s(useStore, \"nM5W+84F396yCKDu4U2VhqiPF0o=\");\n\nexport var initStore = function initStore(initialState, userActions) {\n  if (initialState) {\n    globalState = (_readOnlyError(\"globalState\"), _objectSpread(_objectSpread({}, globalState), initialState));\n  }\n\n  actions = (_readOnlyError(\"actions\"), _objectSpread(_objectSpread({}, actions), userActions));\n};","map":{"version":3,"sources":["C:/Users/Kh3m/Documents/projects/austinExpress/client/hooks/store/store.js"],"names":["useState","useEffect","globalState","listeners","actions","useStore","shouldListen","setState","dispatch","actionIdentifier","payload","newState","listener","push","filter","li","initStore","initialState","userActions"],"mappings":";;;;;;;;;;;;;;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,OAAO,GAAG,EAAhB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAA2B;AAAA;;AAAA,MAAzBC,YAAyB,uEAAV,IAAU;AAC/C,MAAMC,QAAQ,GAAGP,QAAQ,CAACE,WAAD,CAAR,CAAsB,CAAtB,CAAjB;;AAEA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACC,gBAAD,EAAmBC,OAAnB,EAA+B;AAC5C,QAAMC,QAAQ,GAAGP,OAAO,CAACK,gBAAD,CAAP,CAA0BP,WAA1B,EAAuCQ,OAAvC,CAAjB;AACAR,IAAAA,WAAW,mEAAQA,WAAR,GAAwBS,QAAxB,EAAX;;AAF4C,+CAItBR,SAJsB;AAAA;;AAAA;AAI5C,0DAAiC;AAAA,YAAvBS,QAAuB;AAC7BA,QAAAA,QAAQ,CAACV,WAAD,CAAR;AACH;AAN2C;AAAA;AAAA;AAAA;AAAA;AAO/C,GAPD;;AASAD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGK,YAAH,EAAiB;AACbH,MAAAA,SAAS,CAACU,IAAV,CAAeN,QAAf;AACH;;AACD,WAAO,YAAM;AACT,UAAGD,YAAH,EAAiB;AACbH,QAAAA,SAAS,iCAAGA,SAAS,CAACW,MAAV,CAAiB,UAAAC,EAAE;AAAA,iBAAIA,EAAE,KAAKR,QAAX;AAAA,SAAnB,CAAH,CAAT;AACH;AACJ,KAJD;AAKH,GATQ,EASN,CAACA,QAAD,EAAWD,YAAX,CATM,CAAT;AAWA,SAAO,CAACJ,WAAD,EAAcM,QAAd,CAAP;AACH,CAxBM;;GAAMH,Q;;AA0Bb,OAAO,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAeC,WAAf,EAA+B;AACpD,MAAGD,YAAH,EAAiB;AACbf,IAAAA,WAAW,mEAAQA,WAAR,GAAwBe,YAAxB,EAAX;AACH;;AACDb,EAAAA,OAAO,+DAAQA,OAAR,GAAoBc,WAApB,EAAP;AACH,CALM","sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst globalState = {};\r\nconst listeners = [];\r\nconst actions = {};\r\n\r\nexport const useStore = ( shouldListen = true ) => {\r\n    const setState = useState(globalState)[1];\r\n    \r\n    const dispatch = (actionIdentifier, payload) => {\r\n        const newState = actions[actionIdentifier](globalState, payload);\r\n        globalState = { ...globalState, ...newState };\r\n\r\n        for(const listener of listeners) {\r\n            listener(globalState);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(shouldListen) {\r\n            listeners.push(setState);\r\n        }\r\n        return () => {\r\n            if(shouldListen) {\r\n                listeners = listeners.filter(li => li !== setState);\r\n            }\r\n        }\r\n    }, [setState, shouldListen]);\r\n\r\n    return [globalState, dispatch];\r\n}\r\n\r\nexport const initStore = (initialState, userActions) => {\r\n    if(initialState) {\r\n        globalState = { ...globalState, ...initialState };\r\n    }\r\n    actions = { ...actions, ...userActions };\r\n}"]},"metadata":{},"sourceType":"module"}