{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Projects\\\\Github Projects\\\\aoi\\\\client\\\\pages\\\\checkout\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport classes from \"./Cart.module.css\";\nimport BigButton from \"../../components/UI/BigButton\";\nimport CartItem from \"../../components/Cart/cartItem\";\nvar cartItems = [{\n  image: \"/images/mules.jpg\",\n  price: 21.84,\n  description: {\n    name: \"adidas Men's Adilette Shower Slides Sandal, Black, 18\",\n    category: \"Men's Athletic & Outdoor Sandals & Slides\"\n  }\n}, {\n  image: \"/images/hayes.jpg\",\n  price: 21.84,\n  description: {\n    name: \"adidas Men's Adilette Shower Slides Sandal, Black, 18\",\n    category: \"Men's Athletic & Outdoor Sandals & Slides\"\n  }\n}];\n\nvar Cart = /*#__PURE__*/function (_Component) {\n  _inherits(Cart, _Component);\n\n  var _super = _createSuper(Cart);\n\n  function Cart() {\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      shippingForm: {\n        firstName: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"First Name\"\n          },\n          value: \"\"\n        },\n        lastName: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"Last Name\"\n          },\n          value: \"\"\n        },\n        address1: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Address 1\"\n          },\n          value: \"\"\n        },\n        address2: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Address 2\"\n          },\n          value: \"\"\n        },\n        country: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"United State\",\n              displayValue: \"United State\"\n            }, {\n              value: \"United Kingdom \",\n              displayValue: \"United Kingdom\"\n            }, {\n              value: \"Nigeria\",\n              displayValue: \"Nigeria\"\n            }, {\n              value: \"South Africa\",\n              displayValue: \"South Africa\"\n            }]\n          },\n          value: \"\"\n        },\n        state: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"Texas\",\n              displayValue: \"Texas\"\n            }, {\n              value: \"Carlfonia\",\n              displayValue: \"Carfonia\"\n            }, {\n              value: \"Virginia\",\n              displayValue: \"Virginia\"\n            }, {\n              value: \"Florida\",\n              displayValue: \"Florida\"\n            }]\n          },\n          value: \"\"\n        },\n        city: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"City\"\n          },\n          value: \"\"\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Zip Code\"\n          },\n          value: \"\"\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Email\"\n          },\n          value: \"\"\n        },\n        phoneNumber: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Phone Number\"\n          },\n          value: \"\"\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputChangeHandler\", function (event, inputIdentifier) {\n      var updatedshippingForm = _objectSpread({}, _this.state.shippingForm);\n\n      var updatedFormElement = _objectSpread({}, updatedshippingForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedshippingForm[inputIdentifier] = updatedFormElement;\n\n      _this.setState({\n        shippingForm: updatedshippingForm\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addProductHandler\", function (event) {\n      event.preventDefault();\n      var formData = {};\n\n      for (var inputElementIdentifier in _this.state.shippingForm) {\n        formData[inputElementIdentifier] = _this.state.shippingForm[inputElementIdentifier].value;\n      }\n\n      var product = {\n        productData: formData\n      };\n      console.log(product.productData);\n    });\n\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"render\",\n    value: function render() {\n      var formElementArray = [];\n\n      for (var key in this.state.shippingForm) {\n        formElementArray.push({\n          id: key,\n          config: this.state.shippingForm[key]\n        });\n      }\n\n      return __jsx(\"div\", {\n        className: classes.Checkout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: classes.Shipping,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: classes.OrderSummary,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nexport default Cart;","map":{"version":3,"sources":["D:/Projects/Github Projects/aoi/client/pages/checkout/index.js"],"names":["React","Component","Link","classes","BigButton","CartItem","cartItems","image","price","description","name","category","Cart","shippingForm","firstName","elementType","elementConfig","type","placeholder","value","lastName","address1","address2","country","options","displayValue","state","city","zipCode","email","phoneNumber","event","inputIdentifier","updatedshippingForm","updatedFormElement","target","setState","preventDefault","formData","inputElementIdentifier","product","productData","console","log","formElementArray","key","push","id","config","Checkout","Shipping","OrderSummary"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nimport classes from \"./Cart.module.css\";\r\nimport BigButton from \"../../components/UI/BigButton\";\r\nimport CartItem from \"../../components/Cart/cartItem\";\r\n\r\nconst cartItems = [\r\n  {\r\n    image: \"/images/mules.jpg\",\r\n    price: 21.84,\r\n    description: {\r\n      name: \"adidas Men's Adilette Shower Slides Sandal, Black, 18\",\r\n      category: \"Men's Athletic & Outdoor Sandals & Slides\",\r\n    },\r\n  },\r\n  {\r\n    image: \"/images/hayes.jpg\",\r\n    price: 21.84,\r\n    description: {\r\n      name: \"adidas Men's Adilette Shower Slides Sandal, Black, 18\",\r\n      category: \"Men's Athletic & Outdoor Sandals & Slides\",\r\n    },\r\n  },\r\n];\r\n\r\nclass Cart extends Component {\r\n  state = {\r\n    shippingForm: {\r\n      firstName: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"First Name\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      lastName: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"number\",\r\n          placeholder: \"Last Name\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      address1: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Address 1\",\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      address2: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Address 2\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      country: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"United State\", displayValue: \"United State\" },\r\n            { value: \"United Kingdom \", displayValue: \"United Kingdom\" },\r\n            { value: \"Nigeria\", displayValue: \"Nigeria\" },\r\n            { value: \"South Africa\", displayValue: \"South Africa\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n      state: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"Texas\", displayValue: \"Texas\" },\r\n            { value: \"Carlfonia\", displayValue: \"Carfonia\" },\r\n            { value: \"Virginia\", displayValue: \"Virginia\" },\r\n            { value: \"Florida\", displayValue: \"Florida\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      city: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"City\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Zip Code\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Email\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      phoneNumber: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Phone Number\",\r\n        },\r\n        value: \"\",\r\n      },\r\n    },\r\n  };\r\n  //Input Change Handler\r\n  inputChangeHandler = (event, inputIdentifier) => {\r\n    const updatedshippingForm = { ...this.state.shippingForm };\r\n    const updatedFormElement = { ...updatedshippingForm[inputIdentifier] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedshippingForm[inputIdentifier] = updatedFormElement;\r\n    this.setState({ shippingForm: updatedshippingForm });\r\n  };\r\n\r\n  //Adding Product Handler\r\n  addProductHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let inputElementIdentifier in this.state.shippingForm) {\r\n      formData[inputElementIdentifier] = this.state.shippingForm[\r\n        inputElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const product = {\r\n      productData: formData,\r\n    };\r\n    console.log(product.productData);\r\n  };\r\n  render() {\r\n    const formElementArray = [];\r\n    for (let key in this.state.shippingForm) {\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.shippingForm[key],\r\n      });\r\n    }\r\n    return (\r\n      <div className={classes.Checkout}>\r\n        <div className={classes.Shipping}></div>\r\n        <div className={classes.OrderSummary}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}