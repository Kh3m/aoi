{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kh3m\\\\Documents\\\\projects\\\\austinExpress\\\\dashboard\\\\components\\\\Dashboard\\\\Contents\\\\ProductForm\\\\ProductForm.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport classes from \"./productForm.module.css\";\nimport Input from \"../../../UI/Input/Input\";\nimport Button from \"../../../UI/Button/Button\";\n\nclass ProductForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      productForm: {\n        title: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Product Title\"\n          },\n          value: \"\"\n        },\n        price: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"Product Price\"\n          },\n          value: \"\"\n        },\n        sizes: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Size\"\n          },\n          value: \"\"\n        },\n        colors: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Color\"\n          },\n          value: \"\"\n        },\n        material: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Product Material\"\n          },\n          value: \"\"\n        },\n        feature: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Product Feature\"\n          },\n          value: \"\"\n        },\n        category: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"null\",\n              displayValue: \"---Select Category---\"\n            }, {\n              value: \"men\",\n              displayValue: \"Men\"\n            }, {\n              value: \"women\",\n              displayValue: \"Women\"\n            }, {\n              value: \"kids\",\n              displayValue: \"Kids\"\n            }]\n          },\n          value: \"\"\n        },\n        subCategory: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"null\",\n              displayValue: \"---Select Sub-Category---\"\n            }, {\n              value: \"shoes\",\n              displayValue: \"Shoes\"\n            }, {\n              value: \"women\",\n              displayValue: \"Women\"\n            }, {\n              value: \"Kids\",\n              displayValue: \"Kids\"\n            }]\n          },\n          value: \"\"\n        },\n        brand: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"null\",\n              displayValue: \"---Select Brand---\"\n            }, {\n              value: \"nike\",\n              displayValue: \"Nike\"\n            }, {\n              value: \"clarks\",\n              displayValue: \"Clarks\"\n            }, {\n              value: \"Gucci\",\n              displayValue: \"Gucci\"\n            }]\n          },\n          value: \"\"\n        },\n        description: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Product description\"\n          },\n          value: \"\"\n        }\n      }\n    });\n\n    _defineProperty(this, \"inputChangeHandler\", (event, inputIdentifier) => {\n      const updatedProductForm = _objectSpread({}, this.state.productForm);\n\n      const updatedFormElement = _objectSpread({}, updatedProductForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedProductForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        productForm: updatedProductForm\n      });\n    });\n\n    _defineProperty(this, \"addProductHandler\", event => {\n      event.preventDefault();\n      const formData = {};\n\n      for (let inputElementIdentifier in this.state.productForm) {\n        formData[inputElementIdentifier] = this.state.productForm[inputElementIdentifier].value;\n      }\n\n      const product = {\n        productData: formData\n      };\n      product.productData.sizes = product.productData.sizes.split(\";\");\n      product.productData.colors = product.productData.colors.split(\";\");\n      console.log(product.productData);\n    });\n  }\n\n  render() {\n    let search = null;\n\n    if (this.props.update) {\n      search = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, __jsx(\"form\", {\n        className: classes.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Product Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }), __jsx(\"input\", {\n        type: \"submit\",\n        value: \"Search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    const formElementArray = [];\n\n    for (let key in this.state.productForm) {\n      formElementArray.push({\n        id: key,\n        config: this.state.productForm[key]\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: classes.FormsWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, this.props.title), search, __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, formElementArray.map((formElement, index) => __jsx(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangeHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    })), __jsx(Button, {\n      clicked: this.addProductHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, \"Add Product\"))));\n  }\n\n}\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Kh3m/Documents/projects/austinExpress/dashboard/components/Dashboard/Contents/ProductForm/ProductForm.js"],"names":["React","Component","classes","Input","Button","ProductForm","productForm","title","elementType","elementConfig","type","placeholder","value","price","sizes","colors","material","feature","category","options","displayValue","subCategory","brand","description","event","inputIdentifier","updatedProductForm","state","updatedFormElement","target","setState","preventDefault","formData","inputElementIdentifier","product","productData","split","console","log","render","search","props","update","formElementArray","key","push","id","config","FormsWrapper","Form","map","formElement","index","inputChangeHandler","addProductHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport classes from \"./productForm.module.css\";\r\nimport Input from \"../../../UI/Input/Input\";\r\nimport Button from \"../../../UI/Button/Button\";\r\n\r\nclass ProductForm extends Component {\r\n  state = {\r\n    productForm: {\r\n      title: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Product Title\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      price: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"number\",\r\n          placeholder: \"Product Price\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      sizes: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Size\",\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      colors: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Color\",\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      material: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Product Material\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      feature: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Product Feature\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      category: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"null\", displayValue: \"---Select Category---\" },\r\n            { value: \"men\", displayValue: \"Men\" },\r\n            { value: \"women\", displayValue: \"Women\" },\r\n            { value: \"kids\", displayValue: \"Kids\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      subCategory: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"null\", displayValue: \"---Select Sub-Category---\" },\r\n            { value: \"shoes\", displayValue: \"Shoes\" },\r\n            { value: \"women\", displayValue: \"Women\" },\r\n            { value: \"Kids\", displayValue: \"Kids\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      brand: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"null\", displayValue: \"---Select Brand---\" },\r\n            { value: \"nike\", displayValue: \"Nike\" },\r\n            { value: \"clarks\", displayValue: \"Clarks\" },\r\n            { value: \"Gucci\", displayValue: \"Gucci\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n      description: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          placeholder: \"Product description\",\r\n        },\r\n        value: \"\",\r\n      },\r\n    },\r\n  };\r\n  //Input Change Handler\r\n  inputChangeHandler = (event, inputIdentifier) => {\r\n    const updatedProductForm = { ...this.state.productForm };\r\n    const updatedFormElement = { ...updatedProductForm[inputIdentifier] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedProductForm[inputIdentifier] = updatedFormElement;\r\n    this.setState({ productForm: updatedProductForm });\r\n  };\r\n\r\n  //Adding Product Handler\r\n  addProductHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let inputElementIdentifier in this.state.productForm) {\r\n      formData[inputElementIdentifier] = this.state.productForm[\r\n        inputElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const product = {\r\n      productData: formData,\r\n    };\r\n\r\n    product.productData.sizes = product.productData.sizes.split(\";\");\r\n    product.productData.colors = product.productData.colors.split(\";\");\r\n\r\n    console.log(product.productData);\r\n  };\r\n  render() {\r\n    let search = null;\r\n    if (this.props.update) {\r\n      search = (\r\n        <div>\r\n          <form className={classes.search}>\r\n            <input type=\"text\" placeholder=\"Enter Product Code\" />\r\n            <input type=\"submit\" value=\"Search\" />\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const formElementArray = [];\r\n    for (let key in this.state.productForm) {\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.productForm[key],\r\n      });\r\n    }\r\n    return (\r\n      <div className={classes.FormsWrapper}>\r\n        <div className={classes.Form}>\r\n          <h2>{this.props.title}</h2>\r\n          {search}\r\n          <form>\r\n            {/* {this.props.type == \"Update Product\" ? <} */}\r\n            {formElementArray.map((formElement, index) => (\r\n              <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                changed={(event) =>\r\n                  this.inputChangeHandler(event, formElement.id)\r\n                }\r\n              />\r\n            ))}\r\n\r\n            <Button clicked={this.addProductHandler}>Add Product</Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductForm;\r\n"]},"metadata":{},"sourceType":"module"}