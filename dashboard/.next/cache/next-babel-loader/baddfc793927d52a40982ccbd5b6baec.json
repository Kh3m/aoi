{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Projects\\\\Github Projects\\\\aoi\\\\dashboard\\\\components\\\\Dashboard\\\\Contents\\\\ProductForm\\\\ProductForm.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport classes from \"./productForm.module.css\";\nimport Input from \"../../../UI/Input/Input\";\nimport Button from \"../../../UI/Button/Button\";\n\nvar ProductForm = /*#__PURE__*/function (_Component) {\n  _inherits(ProductForm, _Component);\n\n  var _super = _createSuper(ProductForm);\n\n  function ProductForm() {\n    var _this;\n\n    _classCallCheck(this, ProductForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      productForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Product Name\"\n          },\n          value: \"\"\n        },\n        price: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"Product Price\"\n          },\n          value: \"\"\n        },\n        size: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Size\"\n          },\n          value: \"\"\n        },\n        colors: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Colors\"\n          },\n          value: \"\"\n        },\n        quantity: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"number\",\n            placeholder: \"Quantity\"\n          },\n          value: \"\"\n        },\n        category: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"null\",\n              displayValue: \"---Select Category---\"\n            }, {\n              value: \"men\",\n              displayValue: \"Men\"\n            }, {\n              value: \"women\",\n              displayValue: \"Women\"\n            }, {\n              value: \"kids\",\n              displayValue: \"Kids\"\n            }]\n          },\n          value: \"\"\n        },\n        brand: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"null\",\n              displayValue: \"---Select Brand---\"\n            }, {\n              value: \"nike\",\n              displayValue: \"Nike\"\n            }, {\n              value: \"clarks\",\n              displayValue: \"Clarks\"\n            }, {\n              value: \"Gucci\",\n              displayValue: \"Gucci\"\n            }]\n          },\n          value: \"\"\n        },\n        images: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"file\",\n            placeholder: \"Product images\"\n          },\n          value: \"\"\n        },\n        description: {\n          elementType: \"textarea\",\n          elementConfig: {\n            placeholder: \"Product description\"\n          },\n          value: \"\"\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputChangeHandler\", function (event, inputIdentifier) {\n      var updatedProductForm = _objectSpread({}, _this.state.productForm);\n\n      var updatedFormElement = _objectSpread({}, updatedProductForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedProductForm[inputIdentifier] = updatedFormElement;\n\n      _this.setState({\n        productForm: updatedProductForm\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addProductHandler\", function (event) {\n      event.preventDefault();\n      var formData = {};\n\n      for (var inputElementIdentifier in _this.state.productForm) {\n        formData[inputElementIdentifier] = _this.state.productForm[inputElementIdentifier].value;\n      }\n\n      var product = {\n        productData: formData\n      };\n      console.log(product.productData);\n    });\n\n    return _this;\n  }\n\n  _createClass(ProductForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var search = null;\n\n      if (this.props.update) {\n        search = __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }\n        }, __jsx(\"form\", {\n          className: classes.search,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }\n        }, __jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Product Code\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }\n        }), __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Search\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      var formElementArray = [];\n\n      for (var key in this.state.productForm) {\n        formElementArray.push({\n          id: key,\n          config: this.state.productForm[key]\n        });\n      }\n\n      return __jsx(\"div\", {\n        className: classes.FormsWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: classes.Form,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, this.props.title), search, __jsx(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, formElementArray.map(function (formElement, index) {\n        return __jsx(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          changed: function changed(event) {\n            return _this2.inputChangeHandler(event, formElement.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }\n        });\n      }), __jsx(Button, {\n        clicked: this.addProductHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, \"Add Product\"))));\n    }\n  }]);\n\n  return ProductForm;\n}(Component);\n\nexport default ProductForm;","map":{"version":3,"sources":["D:/Projects/Github Projects/aoi/dashboard/components/Dashboard/Contents/ProductForm/ProductForm.js"],"names":["React","Component","classes","Input","Button","ProductForm","productForm","name","elementType","elementConfig","type","placeholder","value","price","size","colors","quantity","category","options","displayValue","brand","images","description","event","inputIdentifier","updatedProductForm","state","updatedFormElement","target","setState","preventDefault","formData","inputElementIdentifier","product","productData","console","log","search","props","update","formElementArray","key","push","id","config","FormsWrapper","Form","title","map","formElement","index","inputChangeHandler","addProductHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport classes from \"./productForm.module.css\";\r\nimport Input from \"../../../UI/Input/Input\";\r\nimport Button from \"../../../UI/Button/Button\";\r\n\r\nclass ProductForm extends Component {\r\n  state = {\r\n    productForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Product Name\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      price: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"number\",\r\n          placeholder: \"Product Price\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      size: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Size\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      colors: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Colors\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      quantity: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"number\",\r\n          placeholder: \"Quantity\",\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      category: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"null\", displayValue: \"---Select Category---\" },\r\n            { value: \"men\", displayValue: \"Men\" },\r\n            { value: \"women\", displayValue: \"Women\" },\r\n            { value: \"kids\", displayValue: \"Kids\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n\r\n      brand: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"null\", displayValue: \"---Select Brand---\" },\r\n            { value: \"nike\", displayValue: \"Nike\" },\r\n            { value: \"clarks\", displayValue: \"Clarks\" },\r\n            { value: \"Gucci\", displayValue: \"Gucci\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n      },\r\n      images: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"file\",\r\n          placeholder: \"Product images\",\r\n        },\r\n        value: \"\",\r\n      },\r\n      description: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          placeholder: \"Product description\",\r\n        },\r\n        value: \"\",\r\n      },\r\n    },\r\n  };\r\n  //Input Change Handler\r\n  inputChangeHandler = (event, inputIdentifier) => {\r\n    const updatedProductForm = { ...this.state.productForm };\r\n    const updatedFormElement = { ...updatedProductForm[inputIdentifier] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedProductForm[inputIdentifier] = updatedFormElement;\r\n    this.setState({ productForm: updatedProductForm });\r\n  };\r\n\r\n  //Adding Product Handler\r\n  addProductHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let inputElementIdentifier in this.state.productForm) {\r\n      formData[inputElementIdentifier] = this.state.productForm[\r\n        inputElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const product = {\r\n      productData: formData,\r\n    };\r\n    console.log(product.productData);\r\n  };\r\n  render() {\r\n    let search = null;\r\n    if (this.props.update) {\r\n      search = (\r\n        <div>\r\n          <form className={classes.search}>\r\n            <input type=\"text\" placeholder=\"Enter Product Code\" />\r\n            <input type=\"submit\" value=\"Search\" />\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const formElementArray = [];\r\n    for (let key in this.state.productForm) {\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.productForm[key],\r\n      });\r\n    }\r\n    return (\r\n      <div className={classes.FormsWrapper}>\r\n        <div className={classes.Form}>\r\n          <h2>{this.props.title}</h2>\r\n          {search}\r\n          <form>\r\n            {/* {this.props.type == \"Update Product\" ? <} */}\r\n            {formElementArray.map((formElement, index) => (\r\n              <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                changed={(event) =>\r\n                  this.inputChangeHandler(event, formElement.id)\r\n                }\r\n              />\r\n            ))}\r\n\r\n            <Button clicked={this.addProductHandler}>Add Product</Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductForm;\r\n"]},"metadata":{},"sourceType":"module"}